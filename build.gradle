buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
    id 'java'
}

group = 'stg'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-test'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'mysql:mysql-connector-java:8.0.29'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.projectlombok:lombok'
    annotationProcessor('org.projectlombok:lombok')
    implementation group: 'org.javassist', name: 'javassist', version: '3.15.0-GA'
    implementation group: 'io.springfox', name: 'springfox-boot-starter', version: '3.0.0' //swagger 사용 위한 springfox-boot-starter 설치
    //gson을 사용하기 위해 의존성을 추가
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.8' //DTO 편의구현 위한 model mapper 사용
    implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.3.1'
    implementation 'com.auth0:java-jwt:3.8.3' //JWT 생성위한 라이브러리
    implementation 'junit:junit:4.13.1'
    runtimeOnly 'com.h2database:h2'
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.3' //jasypt 암호화
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis' //redis
    implementation 'com.github.downgoon:marvin:1.5.5'
    implementation 'com.github.downgoon:MarvinPlugins:1.5.5'
    implementation 'com.google.firebase:firebase-admin:9.1.1' //firebase FCM
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.2.2'
    compile group: 'org.springframework', name: 'spring-test'
}

tasks.named('test') {
    useJUnitPlatform()
}
def querydslDir = "$buildDir/generated/querydsl"
// JPA 사용 여부와 사용할 경로를 설정
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
// build 시 사용할 sourceSet 추가
sourceSets {
    main.java.srcDir querydslDir
}
// querydsl 컴파일시 사용할 옵션 설정
compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}
// querydsl 이 compileClassPath 를 상속하도록 설정
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}